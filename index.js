// Generated by CoffeeScript 1.7.1
'use strict';
var binaryCheck, checks, eachAsync, execFile, home, node, npm, semver, which;

execFile = require('child_process').execFile;

which = require('which');

eachAsync = require('each-async');

semver = require('semver');

checks = [];

binaryCheck = function(bin, opts, cb) {
  var title;
  opts = opts || {};
  title = opts.title || bin[0].toUpperCase() + bin.slice(1);
  return which(bin, function(err) {
    if (err) {
      if (/not found/.test(err.message)) {
        return cb(null, {
          title: title,
          message: opts.message || 'not found',
          fail: true
        });
      }
      return cb(err);
    }
    return cb(null, {
      title: title
    });
  });
};

["ruby", "compass", "git", "yo"].forEach(function(el) {
  var binaries;
  return checks.push(binaries = function(cb) {
    binaryCheck(el, null, cb);
  });
});

home = function(cb) {
  var win;
  win = process.platform === "win32";
  home = (win ? process.env.USERPROFILE : process.env.HOME);
  cb(null, {
    title: (win ? "%USERPROFILE" : "$HOME"),
    message: !home && "environment variable is not set. This is required to know where your home directory is. Follow this guide: https://github.com/sindresorhus/guides/blob/master/set-environment-variables.md",
    fail: !home
  });
};

checks.push(home);

node = function(cb) {
  var bin, err;
  try {
    bin = which.sync("node");
  } catch (_error) {
    err = _error;
    return cb(null, {
      title: "Node.js",
      message: "Not installed. Please install from http://nodejs.org",
      fail: true
    });
  }
  execFile(bin, ["--version"], function(err, stdout) {
    var pass, version;
    if (err) {
      return cb(err);
    }
    version = stdout.trim();
    pass = semver.satisfies(version, ">=0.10.0");
    cb(null, {
      title: "Node.js",
      message: !pass && version + " is outdated. Please update at http://nodejs.org",
      fail: !pass
    });
  });
};

checks.push(node);

npm = function(cb) {
  var bin, err;
  try {
    bin = which.sync("npm");
  } catch (_error) {
    err = _error;
    return cb(null, {
      title: "npm",
      message: "Not installed. Please install Node.js (which bundles npm) from http://nodejs.org",
      fail: true
    });
  }
  execFile(bin, ["--version"], function(err, stdout) {
    var pass, version;
    if (err) {
      return cb(err);
    }
    version = stdout.trim();
    pass = semver.satisfies(version, ">=1.3.10");
    cb(null, {
      title: "npm",
      message: !pass && version + " is outdated. Please update by running: npm update --global npm",
      fail: !pass
    });
  });
};

checks.push(npm);

module.exports = function(cb) {
  var results;
  results = [];
  eachAsync(checks, (function(el, i, next) {
    el(function(err, result) {
      if (err) {
        return next(err);
      }
      results.push(result);
      next();
    });
  }), function(err) {
    cb(err, results);
  });
};
